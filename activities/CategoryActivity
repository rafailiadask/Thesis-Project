package com.example.productspurchaseapp;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.core.view.GravityCompat;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.example.productspurchaseapp.Model.Products;
import com.example.productspurchaseapp.Model.Subcategories;
import com.example.productspurchaseapp.Model.Subcategories_for_cosmetics;
import com.example.productspurchaseapp.Model.Subcategories_for_housewares;
import com.example.productspurchaseapp.Model.Subcategories_for_housewares;
import com.example.productspurchaseapp.Prevalent.Prevalent;
import com.example.productspurchaseapp.ViewHolder.SubcategoryForCosmeticsViewHolder;
import com.example.productspurchaseapp.ViewHolder.SubcategoryForHousewareViewHolder;
import com.example.productspurchaseapp.ViewHolder.SubcategoryViewHolder;
import com.firebase.ui.database.FirebaseRecyclerAdapter;
import com.firebase.ui.database.FirebaseRecyclerOptions;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import com.google.android.material.snackbar.Snackbar;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.squareup.picasso.Picasso;

import de.hdodenhof.circleimageview.CircleImageView;

public class CategoryActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
    private DatabaseReference SubcategoriesRef;
    private DatabaseReference Subcategories_for_cosmeticsRef;
    private DatabaseReference Subcategories_for_housewaresRef;
    private DatabaseReference ProductsRef;
    private RecyclerView recyclerView;
    RecyclerView.LayoutManager layoutManager;
    private String category;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_category);

        Intent intent = getIntent();
        if (intent != null) {
            String  receivedCategory = intent.getStringExtra("category");
            if(receivedCategory!=null && !receivedCategory.isEmpty()){
                category=receivedCategory;
            }
        }
        if(category==null || category.isEmpty()){
            category="Default Category Title";
        }
        /*SubcategoriesRef = FirebaseDatabase.getInstance().getReference().child("Subcategories");
        Subcategories_for_cosmeticsRef = FirebaseDatabase.getInstance().getReference().child("Subcategories_for_cosmetics");*/

        /*category = "Default Category Title";*/

        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        toolbar.setTitle("category");

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent =new Intent(CategoryActivity.this,CartActivity.class);
                startActivity(intent);
            }
        });
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        View headerView = navigationView.getHeaderView(0);
        TextView userNameTextView = headerView.findViewById(R.id.user_profile_name);
        CircleImageView profileImageView = headerView.findViewById(R.id.user_profile_image);

        userNameTextView.setText(Prevalent.currentΟnlineUser.getName());

        recyclerView = findViewById(R.id.recycler_menu);
        recyclerView.setHasFixedSize(true);
        layoutManager = new LinearLayoutManager(this);
        recyclerView.setLayoutManager(layoutManager);
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    protected void onStart() {

        super.onStart();
        if (category != null && !category.isEmpty()) {
            if (category.equals("clothes")) {
                displayClothesCategory();
            } else if (category.equals("cosmetics")) {
                displayCosmeticsCategory();
            } else if (category.equals("housewares")) {
                displayHousewaresCategory();
            } else {
                // Εάν η μεταβλητή category είναι null ή κενή, μπορείτε να εμφανίσετε ένα μήνυμα σφάλματος ή να προβείτε σε άλλη ενέργεια ανάλογα με την περίπτωση.
                Toast.makeText(this, "Category is empty", Toast.LENGTH_SHORT).show();
            }
        }

    }



    private void displayClothesCategory() {

        SubcategoriesRef = FirebaseDatabase.getInstance().getReference().child("Subcategories");
        FirebaseRecyclerOptions<Subcategories> options = new FirebaseRecyclerOptions.Builder<Subcategories>().setQuery(SubcategoriesRef, Subcategories.class).build();
        FirebaseRecyclerAdapter<Subcategories, SubcategoryViewHolder> adapter = new FirebaseRecyclerAdapter<Subcategories, SubcategoryViewHolder>(options)
        {

            @Override
            protected void onBindViewHolder(@NonNull SubcategoryViewHolder holder, int position, @NonNull Subcategories model) {
                holder.SubcategoryName.setText(model.getPname());
                holder.SubcategoryDescription.setText(model.getDescription());
                holder.SubcategoryPrice.setText("Price=" + model.getPrice() + "€");
                holder.SubcategoryPid.setText(model.getPid());
                Picasso.get().load(model.getImage()).into(holder.imageView);

                holder.itemView.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Intent intent = new Intent(CategoryActivity.this, ProductDetailsActivity.class);

                        intent.putExtra("name", model.getPname());
                        intent.putExtra("description", model.getDescription());
                        intent.putExtra("price",String.valueOf(model.getPrice()) );
                        intent.putExtra("image", model.getImage());


                        intent.putExtra("category", "clothes");
                        startActivity(intent);
                    }
                });
            }


            @NonNull
            @Override
            public SubcategoryViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.subcategory_item_layout, parent, false);
                SubcategoryViewHolder holder = new SubcategoryViewHolder(view);
                return holder;
            }
        };
        recyclerView.setAdapter(adapter);
        adapter.startListening();
    }
    private void displayCosmeticsCategory() {

        /*ProductsRef = Subcategories_for_cosmeticsRef;*/
        Subcategories_for_cosmeticsRef = FirebaseDatabase.getInstance().getReference().child("Subcategories_for_cosmetics");
        FirebaseRecyclerOptions<Subcategories_for_cosmetics> options = new FirebaseRecyclerOptions.Builder<Subcategories_for_cosmetics>()
                .setQuery(Subcategories_for_cosmeticsRef, Subcategories_for_cosmetics.class)
                .build();
        FirebaseRecyclerAdapter<Subcategories_for_cosmetics, SubcategoryForCosmeticsViewHolder> adapter = new FirebaseRecyclerAdapter<Subcategories_for_cosmetics, SubcategoryForCosmeticsViewHolder>(options) {
            @Override
            protected void onBindViewHolder(@NonNull SubcategoryForCosmeticsViewHolder holder, int position, @NonNull Subcategories_for_cosmetics model) {
                holder.SubcategoryCosmeticsName.setText(model.getPname());
                holder.SubcategoryCosmeticsDescription.setText(model.getDescription());
                holder.SubcategoryCosmeticsPrice.setText("Price=" + model.getPrice() + "€");
                Picasso.get().load(model.getImage()).into(holder.imageView);

                holder.itemView.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Intent intent = new Intent(CategoryActivity.this, ProductDetailsActivity.class);

                        intent.putExtra("name", model.getPname());
                        intent.putExtra("description", model.getDescription());
                        intent.putExtra("price",String.valueOf(model.getPrice()) );
                        intent.putExtra("image", model.getImage());




                        intent.putExtra("category", "cosmetics");
                        startActivity(intent);
                    }
                });
            }

            @NonNull
            @Override
            public SubcategoryForCosmeticsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.subcategory_cosmetics_item_layout, parent, false);
                SubcategoryForCosmeticsViewHolder holder = new SubcategoryForCosmeticsViewHolder(view);
                return holder;
            }
        };
        recyclerView.setAdapter(adapter);
        adapter.startListening();
    }


    private void displayHousewaresCategory() {
        Subcategories_for_housewaresRef = FirebaseDatabase.getInstance().getReference().child("Subcategories_for_housewares");

        FirebaseRecyclerOptions<Subcategories_for_housewares> options = new FirebaseRecyclerOptions.Builder<Subcategories_for_housewares>().setQuery(Subcategories_for_housewaresRef, Subcategories_for_housewares.class).build();
        FirebaseRecyclerAdapter<Subcategories_for_housewares, SubcategoryForHousewareViewHolder> adapter = new FirebaseRecyclerAdapter<Subcategories_for_housewares, SubcategoryForHousewareViewHolder>(options) {
            @Override
            protected void onBindViewHolder(@NonNull SubcategoryForHousewareViewHolder holder, int position, @NonNull Subcategories_for_housewares model) {
                holder.SubcategoryHousewaresName.setText(model.getPname());
                holder.SubcategoryHousewaresDescription.setText(model.getDescription());
                holder.SubcategoryHousewaresPrice.setText("Price=" + model.getPrice() + "€");
                Picasso.get().load(model.getImage()).into(holder.imageView);

                holder.itemView.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Intent intent = new Intent(CategoryActivity.this, ProductDetailsActivity.class);

                        intent.putExtra("name", model.getPname());
                        intent.putExtra("description", model.getDescription());
                        intent.putExtra("price", String.valueOf(model.getPrice()));
                        intent.putExtra("image", model.getImage());





                        intent.putExtra("category", "housewares");
                        startActivity(intent);
                    }
                });
            }

            @NonNull
            @Override
            public SubcategoryForHousewareViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.subcategory_houseware_items_layout, parent, false);
                SubcategoryForHousewareViewHolder holder = new SubcategoryForHousewareViewHolder(view);
                return holder;
            }
        };
        recyclerView.setAdapter(adapter);
        adapter.startListening();
    }


    @Override
    public boolean onCreateOptionsMenu(android.view.Menu menu){
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.home, menu);
        return true;
    }
    @Override
    public boolean onOptionsItemSelected(MenuItem item)
    {
        int id = item.getItemId();


        return super.onOptionsItemSelected(item);
    }
    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item)
    {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_cart)
        {

        }
        else if (id == R.id.nav_orders)
        {

        }
        else if (id == R.id.nav_categories)
        {

        }
       /* {
            Intent intent = new Intent(CategoryActivity.this, MainActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
            startActivity(intent);
            finish();
        }*/

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
}
